Check of <a href="Modelica://Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.ThreePhaseTwoLevel_PWM">Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.ThreePhaseTwoLevel_PWM</a>
The model has the same number of unknowns and equations: 402
The model could not be deduced to be symbolically well-posed.
The model has
  333+17*multiPhase2Level.m+potentialSensor.m+harmonic.product1.nu+  harmonic.product2.nu+toSpacePhasor.m+(if filter[1].filterType ==   Modelica.Blocks.Types.FilterType.LowPass or filter[1].filterType ==   Modelica.Blocks.Types.FilterType.HighPass then filter[1].order else 2*  filter[1].order)+(if filter[1].filterType == Modelica.Blocks.Types.FilterType.  BandPass or filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop   then filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2)))+(if filter[1].filterType   == Modelica.Blocks.Types.FilterType.BandPass or filter[1].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[1].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[1].order   else mod(filter[1].order, 2)))+(if filter[2].filterType == Modelica.Blocks.Types.FilterType.  LowPass or filter[2].filterType == Modelica.Blocks.Types.FilterType.HighPass   then filter[2].order else 2*filter[2].order)+(if filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandPass or filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then filter[2].order else (if   filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.CriticalDamping   then 0 else integer(filter[2].order/2)))+(if filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandPass or filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[2].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[2].order   else mod(filter[2].order, 2)))
scalar unknowns and
  341+13*multiPhase2Level.m+14*(if  not multiPhase2Level.useHeatPort then 1 else 0)  +(if filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then 0 else   (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then filter[1].order else mod(filter[1].order, 2)))+2*(if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2)))+(if filter[1].filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if filter[1].filterType ==   Modelica.Blocks.Types.FilterType.BandPass or filter[1].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[1].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[1].order   else mod(filter[1].order, 2)))+(if filter[1].filterType == Modelica.Blocks.Types.FilterType.  BandPass or filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop   then filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2))) else (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.HighPass then (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then 0 else   (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then filter[1].order else mod(filter[1].order, 2)))+(if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2))) else (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass then (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2))) else (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then (if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2))) else 1+(if   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[1].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[1].order else (if filter[1].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[1].order/2)))+(if filter[1].filterType   == Modelica.Blocks.Types.FilterType.BandPass or filter[1].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[1].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[1].order   else mod(filter[1].order, 2)))))))+(if filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandPass or filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[2].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[2].order   else mod(filter[2].order, 2)))+2*(if filter[2].filterType == Modelica.Blocks.Types.FilterType.  BandPass or filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop   then filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2)))+(if filter[2].filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandPass or filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[2].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[2].order   else mod(filter[2].order, 2)))+(if filter[2].filterType == Modelica.Blocks.Types.FilterType.  BandPass or filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop   then filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2))) else (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.HighPass then (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then 0 else   (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then filter[2].order else mod(filter[2].order, 2)))+(if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2))) else (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass then (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2))) else (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then (if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2))) else 1+(if   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandPass or   filter[2].filterType == Modelica.Blocks.Types.FilterType.BandStop then   filter[2].order else (if filter[2].analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(filter[2].order/2)))+(if filter[2].filterType   == Modelica.Blocks.Types.FilterType.BandPass or filter[2].filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if filter[2].analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then filter[2].order   else mod(filter[2].order, 2)))))))
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  402
Check of <a href="Modelica://Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.ThreePhaseTwoLevel_PWM">Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.ThreePhaseTwoLevel_PWM</a> successful.
